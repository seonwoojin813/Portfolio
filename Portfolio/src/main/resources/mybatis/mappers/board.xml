<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper 태그 안에 SQL을 작성 -->
<mapper namespace="board">

	<!-- 동작 SQL : 다른 SQL에 포함시켜서 사용 -->
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'n'.toString()">
				where b.email = u.email
			</if>
			<!-- title에 keyword가 포함된 -->
			<if test="searchType == 't'.toString()">
				where b.email = u.email and
				title like '%' || #{keyword} || '%'
			</if>
			<!-- content에 keyword가 포함된 -->
			<if test="searchType == 'c'.toString()">
				where b.email = u.email and
				content like '%' || #{keyword} || '%'
			</if>
			<!-- nickname에 keyword가 포함된 -->
			<if test="searchType == 'w'.toString()">
				where b.email = u.email and
				nickname like '%' || #{keyword} || '%'
			</if>
			<!--title 또는 content에 keyword가 포함된 -->
			<if test="searchType == 'tc'.toString()">
				where b.email = u.email and(
				title like '%' || #{keyword} || '%' or
				content like '%' || #{keyword} || '%')
			</if>
		</if>
		<if test="searchType==null">
			where b.email = u.email
		</if>
	</sql>


   <!-- 목록보기를 보여주는 SQL -->
   <!--  
     <select id="list" resultType="Board">
      select bno, title, readcnt, regdate, nickname, b.email
      from sunuser u, sunboard b
      where u.email = b.email
      order by updated desc
   </select>
   -->
   
   <!-- 게시글 목록보기 - 페이지 처리 추가
   updateDate 별로 내림차순 정렬해서 Criteria 가 pageStart 부터
   pageStart + perPageNum - 1 번째 데이터 까지만 가져오기 -->
 <!--  
   <select id="list" resultType="Board" parameterType="Criteria">
	 select bno, title, email, nickname, regdate, readcnt
	 from (select rownum rnum,bno,title,email,nickname,regdate,readcnt 
	 from(select bno,title, b.email, nickname, regdate, readcnt
	 from sunboard b ,sunuser u 
	 where b.email = u.email order by updated desc))
	 where rnum &gt;= #{pageStart} and  rnum &lt;= #{pageStart} + #{perPageNum}-1
   </select>
   -->

<!-- 게시글 목록보기 - 페이지 처리 추가
updateDate 별로 내림차순 정렬해서 Criteria 가 pageStart 부터
pageStart + perPageNum - 1 번째 데이터 까지만 가져오기 -->
<select id="list" resultType="Board" parameterType="SearchCriteria">
select bno, title, email, nickname, regdate, readcnt
from (select rownum rnum,bno,title,email,nickname,regdate,readcnt 
from(select bno,title, b.email, regdate, readcnt, nickname
from sunboard b ,sunuser u 
<include refid="search"></include> order by updated desc))
where rnum &gt;= #{pageStart} and  rnum &lt; = #{pageStart} + #{perPageNum} -1

</select>
   

	<!-- 게시글 작성을 위한 SQL -->
	<insert id="register" parameterType="Board">
		insert into sunboard(bno, title, content, ip, email)
		values(sunboardseq.nextval, #{title}, #{content}, #{ip}, #{email})
	</insert>

	<!-- 글번호에 해당하는 데이터의 조회수를 1증가시키는 SQL -->
	<update id="updatereadcnt" parameterType="java.lang.Integer">
		update sunboard
		set readcnt = readcnt + 1
		where bno = #{bno}
	</update>

	<!-- 글번호에 해당하는 데이터 가져오기 nicname은 sunuser 테이블의 존재 -->
	<select id="detail" parameterType="java.lang.Integer"
		resultType="Board">
		select bno, title, content, readcnt, regdate, updated,
		ip, u.email, nickname
		from sunuser u, sunboard b
		where u.email = b.email and bno = #{bno}
	</select>

	<!-- 글 번호를 가지고 tilte, contentm updated를 수정하는 SQL -->
	<update id="update" parameterType="Board">
		update sunboard
		set title = #{title}, content = #{content}, updated = sysdate
		where bno = #{bno}
	</update>

	<!-- 글번호를 가지고 삭제하는 SQL -->
	<delete id="delete" parameterType="java.lang.Integer">
		delete from sunboard
		where bno = #{bno}
	</delete>

	<!-- 전체 데이터 개수를 가져오는 SQL -->
	<!-- where절이 없으면  parameterType="" 도 없는거  -->
	<!-- 
	<select id="totalCount" resultType="java.lang.Integer">
		select count(*)
		from sunboard
	</select>
	-->

	<!-- 전체 데이터 개수를 가져오는 SQL -->
	<!-- where절이 없으면  parameterType="" 도 없는거  -->
	<!--  
	<select id="totalCount"   resultType="java.lang.Integer"
		parameterType="SearchCriteria">
		select count(*)
		from sunboard
		<include refid="search"></include>
	</select>
      -->
      
	<!-- 전체 데이터 개수를 가져오는 SQL -->
	<!-- where절이 없으면  parameterType="" 도 없는거  -->
	<select id="totalCount" resultType="java.lang.Integer"
		parameterType="SearchCriteria">
		select count(*)
		from sunboard b, sunuser u
		<!-- include는 가져와서 쓰는것 -->
		<include refid="search"></include>
	</select>

	<!-- 글번호를 가지고 댓글 개수를 가져오는 SQL -->
	<select id="replycnt" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*)
		from sunreply
		where bno = #{bno}
	</select>
	
	
	
	
</mapper>
